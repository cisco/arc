#!/bin/bash
#
# Copyright (c) 2017, Cisco Systems
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice, this
#   list of conditions and the following disclaimer in the documentation and/or
#   other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
set -x

declare install_cmd=""
declare upgrade_cmd=""
declare pkg_name=""
declare pkg_type=""

function die() {
  printf "Error: %s\n" "$@" >&2
  exit 1
}

function parse_args() {
  if [ "$#" -ne 1 ]; then
    die "Expected arguments: pkg_name"
  fi

  pkg_name="$1"
  pkg_type="${pkg_name:$((${#pkg_name}-3))}"

  if [ "$pkg_type" = "deb" ]; then
    install_cmd="dpkg -i"
  elif [ "$pkg_type" = "rpm" ]; then
    install_cmd="yum install -y"
    upgrade_cmd="yum upgrade -y"
  else
    die "Unknown package type for $pkg_name"
  fi
}

function upgrade() {
  $upgrade_cmd $pkg_name
}

function install() {
  $install_cmd $pkg_name
}

function installed() {
  local output="$(rpm -qa $(rpm -qp --queryformat '%{NAME}' $pkg_name))"
  if [ "$output" = "" ]; then
    return 1
  fi
  return 0
}

function upgraded() {
  local install_name=$(rpm -qp --queryformat '%{NAME}' $pkg_name)
  local upgrade_ver=$(rpm -qp --queryformat '%{VERSION}-%{RELEASE}\n' $pkg_name | head -1)
  local install_ver=$(rpm -q --queryformat '%{VERSION}-%{RELEASE}\n' $install_name | head -1)

  if [ "$upgrade_ver" != "$install_ver" ]; then
    return 1
  fi
  return  0
}

function main() {
  parse_args "$@"

  if [ "$pkg_type" = "deb" ]; then
    install
    return $?
  fi

  if ! installed; then
    install
    return $?
  fi

  if ! upgraded; then
    upgrade
    return $?
  fi

  return 0
}

main "$@"
