#!/bin/bash
#
# Copyright (c) 2017, Cisco Systems
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice, this
#   list of conditions and the following disclaimer in the documentation and/or
#   other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

declare module_name
declare puppet_path="/opt/puppetlabs/bin"

function die() {
  printf "Error: %s\n" "$@" >&2
  exit 1
}

function parse_args() {
  if [ "$#" -ne 1 ]; then
    die "Expected arguments: module_name"
  fi
  module_name="$1"
}

function set_puppet_path() {
  if [ -f /usr/bin/puppet ]; then
    puppet_path="/usr/bin"
  fi
}

function main() {
  parse_args "$@"
  set_puppet_path
  $puppet_path/puppet apply -ve "include $module_name" --detailed-exitcodes; rc=$?

  # Detailed exit code from puppet apply:
  #
  # - an exit code of '2' means there were changes
  # - an exit code of '4' means there were failures during the transaction
  # - an exit code of '6' means there were both changes and failures.
  #
  [ $rc -eq 2 ] && return 0
  return $rc
}

main "$@"
